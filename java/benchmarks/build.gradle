plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'io.freefair.lombok'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':client')

    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'redis.clients:jedis:4.4.3'
    implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    //testImplementation group: 'org.slf4j', name: 'slf4j-reload4j', version: '2.0.9'
    //testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'javababushka.benchmarks.BenchmarkingApp'
    applicationDefaultJvmArgs += "-Djava.library.path=${projectDir}/../target/release:${projectDir}/../target/debug"
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
    jvmArgs "-Djava.library.path=${projectDir}/../target/release:${projectDir}/../target/debug"
}
